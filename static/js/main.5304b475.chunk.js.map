{"version":3,"sources":["logo.svg","UseWindowDimensions.js","CreateLeafletControl.js","MapFunctions.js","MapFilter.js","Map.js","App.js","reportWebVitals.js","index.js"],"names":["getWindowDimensions","window","width","innerWidth","height","innerHeight","DumbControl","Control","extend","options","className","onOff","handleOff","onAdd","_controlDiv","DomUtil","create","this","DomEvent","disableClickPropagation","onRemove","map","off","useControlElement","createElementHook","props","context","instance","overlayContainer","useControl","createControlHook","CreateLeafletControl","useElement","Component","ref","forceUpdate","useState","setValue","value","useForceUpdate","current","useEffect","contentNode","getContainer","createPortal","children","forwardRef","MapFuctions","position","setPosition","clickEnabled","useMapEvents","click","e","console","log","latlng","flyTo","getZoom","marker","CircleMarker","center","pathOptions","color","radius","Popup","lng","lat","MapFilter","useMap","display","setDisplay","filter","setFilter","onClick","style","backgroundColor","left","top","padding","type","placeholder","onChange","target","eachLayer","layer","feature","properties","description","toLowerCase","indexOf","setOpacity","L","Icon","Default","prototype","_getIconUrl","mergeOptions","iconUrl","markerIcon","iconRetinaUrl","markerIcon2x","shadowUrl","markerShadow","npcIcon","icon","iconSize","iconAnchor","locationIcon","popupAnchor","Map","windowDimensions","setWindowDimensions","handleResize","addEventListener","removeEventListener","useWindowDimensions","filterValue","document","details","MapContainer","zoom","TileLayer","attribution","url","minZoom","maxNativeZoom","noWrap","tms","GeoJSON","data","geojsondata","onEachFeature","bindPopup","JSON","stringify","bindTooltip","permanent","direction","offset","openTooltip","pointToLayer","undefined","length","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.5304b475.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import { useState, useEffect } from 'react';\n\nfunction getWindowDimensions() {\n  const { innerWidth: width, innerHeight: height } = window;\n  return {\n    width,\n    height\n  };\n}\n\nexport default function useWindowDimensions() {\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions());\n    }\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  return windowDimensions;\n}","import React, {\n    Ref,\n    forwardRef,\n    useEffect,\n    useState\n  } from 'react'\nimport { createPortal } from 'react-dom'\nimport { createElementHook, createControlHook } from '@react-leaflet/core'\nimport { Control, DomUtil, DomEvent } from 'leaflet'\n\n// https://github.com/LiveBy/react-leaflet-control/issues/44#issuecomment-766318568\n\nconst DumbControl = Control.extend({\n    options: {\n        className: \"\",\n        onOff: \"\",\n        handleOff: function noop() {}\n      },\n\n    onAdd(/* map */) {\n        var _controlDiv = DomUtil.create(\"div\", this.options.className);\n        DomEvent.disableClickPropagation(_controlDiv);\n        return _controlDiv;\n    },\n    \n    onRemove(map) {\n        if (this.options.onOff) {\n          map.off(this.options.onOff, this.options.handleOff, this);\n        }\n    \n        return this;\n    }\n})\n\nconst createControl = (props, context) => {\n    const instance = new DumbControl(props)    \n    return { instance, context: { ...context, overlayContainer: instance } }\n\n}\n\nconst useControlElement = createElementHook(createControl)\nconst useControl = createControlHook(useControlElement)\n\n\n//create your forceUpdate hook\nconst useForceUpdate = () => {\n    const [value, setValue] = useState(0); // integer state\n    return () => setValue(value => value + 1); // update the state to force render\n}\n\n\nconst CreateLeafletControl = (useElement) => {\n    const Component = (props, ref) => {\n        const forceUpdate = useForceUpdate();\n        const { instance } = useElement(props).current\n\n        useEffect(() => {\n            // Origin: https://github.com/LiveBy/react-leaflet-control/blob/master/lib/control.jsx\n            // This is needed because the control is only attached to the map in\n            // MapControl's componentDidMount, so the container is not available\n            // until this is called. We need to now force a render so that the\n            // portal and children are actually rendered.\n            forceUpdate()\n        }, [])\n\n        const contentNode = instance.getContainer()\n        return contentNode ? createPortal(props.children, contentNode) : null\n    }\n    return forwardRef(Component)\n}\n\n\nexport default CreateLeafletControl(useControl)\n","import { useState } from \"react\";\nimport { useMapEvents, CircleMarker, Popup } from \"react-leaflet\";\nimport { Icon } from \"leaflet\";\n\n\nconst MapFuctions = () => {\n    const [position, setPosition] = useState(null)\n    const [clickEnabled, setClickEnabled] = useState(true)\n    const map = useMapEvents({\n      click(e) {\n        if(clickEnabled){\n            console.log(e.latlng)\n            setPosition(e.latlng)\n            map.flyTo(e.latlng, map.getZoom())\n        }\n      }\n    })\n  \n    // return position === null ? null : (\n    //   <CircleMarker \n    //     center={position} \n    //     pathOptions={{ color: 'green' }}\n    //     radius={10}\n    //   >\n    //     <Popup>[{ position.lng }, { position.lat }]</Popup>\n    //   </CircleMarker>\n    // )\n\n    let marker = (position === null) ? null : <CircleMarker \n                center={position} \n                pathOptions={{ color: 'green' }}\n                radius={10}\n            >\n                <Popup>[{ position.lng }, { position.lat }]</Popup>\n            </CircleMarker>\n    return (\n        <div>\n            {  (position === null) ? \"Click some where\" : \"[\" + position.lng + \", \" + position.lat + \"]\" }\n            \n            { marker }\n        </div>\n    )\n}\n\nexport default MapFuctions","import { useState } from \"react\"\nimport { useMap } from \"react-leaflet\"\n\nconst MapFilter = (  ) => {\n    const map = useMap()\n\n    const [display, setDisplay] = useState(false)\n    const [filter, setFilter] = useState('')\n    const toggleDisplay = () => {\n        setDisplay(!display)\n    }\n\n    const handleFilter = (e) => {\n        setFilter(e.target.value)\n        map.eachLayer(function(layer){\n            if (layer.feature ){\n                if (layer.feature.properties.description.toLowerCase().indexOf(e.target.value.toLowerCase()) > -1){\n                    layer.setOpacity(1)\n                }else {\n                    layer.setOpacity(0)\n                }\n            }\n        });\n    } \n\n    return (\n        <div>\n            \n            <button onClick={toggleDisplay}>Filter</button>\n            <div style={{ display: (display) ? \"block\" : \"none\", backgroundColor: \"#ffffff\", position: \"absolute\", width: \"25em\", left: \"-26em\", top: \"0\", padding: \"0.5em\" }}>\n                <label><span>Filter</span>:<input type=\"text\"  placeholder=\"Filter...\" onChange={handleFilter} value={filter} /></label>\n            </div>\n        </div>\n    )\n   \n}\n\nexport default MapFilter","import { MapContainer, TileLayer, GeoJSON, Popup } from \"react-leaflet\";\nimport { Icon } from \"leaflet\";\nimport { useState } from \"react\"\n\nimport useWindowDimensions from \"./UseWindowDimensions\";\n\nimport CreateLeafletControl from './CreateLeafletControl'\nimport MapFuctions from \"./MapFunctions\";\nimport MapFilter from \"./MapFilter\";\n\nimport geojsondata from './snmgeojson.json'\n\nimport L from 'leaflet';\nimport markerIcon2x from 'leaflet/dist/images/marker-icon-2x.png';\nimport markerIcon from 'leaflet/dist/images/marker-icon.png';\nimport markerShadow from 'leaflet/dist/images/marker-shadow.png';\n\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n    iconUrl: markerIcon,\n    iconRetinaUrl: markerIcon2x,\n    shadowUrl: markerShadow,\n})\n\nconst npcIcon = L.icon({\n    iconUrl: '/swords-n-magic-and-maps/npc.png',\n    iconSize:     [25, 35], // size of the icon\n    iconAnchor:   [12, 34], // point of the icon which will correspond to marker's location\n    //popupAnchor:  [-3, -76] // point from which the popup should open relative to the iconAnchor\n});\n\nconst locationIcon = L.icon({\n    iconUrl: '/swords-n-magic-and-maps/location.png',\n    iconSize:     [25, 35], // size of the icon\n    iconAnchor:   [12, 34], // point of the icon which will correspond to marker's location\n    popupAnchor:  [0, -35] // point from which the popup should open relative to the iconAnchor\n});\n\n\nconst Map = () => {\n    const defaultPosition = [-60 ,-30]; \n    const { height, width } = useWindowDimensions();\n\n    const { filterValue, setFilter } = useState('')\n\n    const handlePointToLayer = (feature, latlng) => {\n        //console.log('handlePointToLayer')\n        //console.log(feature)\n        if ( (filterValue === undefined)  || filterValue.length === 0 || feature.properties.description.indexOf(filterValue) > -1 ){\n            switch(feature.properties.type){\n                case \"npc\":\n                    return L.marker(latlng, {icon: npcIcon});\n                default:\n                    return L.marker(latlng, {icon: locationIcon});\n            }\n            \n        }\n        \n    }\n\n    const handleEachFeature = (feature, layer) =>{\n        //console.log(feature)\n        layer.bindPopup(`<div class=\"featurepopup\">${JSON.stringify(feature.properties)}</div>`)\n        layer.bindTooltip(feature.properties.description, { permanent: false, direction: 'top', offset: [0, -32] }).openTooltip();\n    }      \n\n\n    document.addEventListener('filter', function (e) { console.log(e); setFilter(e.details) }, false);\n\n    return (\n        <div className=\"map__container\">\n            <MapContainer\n                center={defaultPosition}\n                zoom={3}\n                style={ { height: height + \"px\", backgroundColor: \"#e7bb8c\" } }\n            >\n                <TileLayer\n                attribution='Map From Kindred Games: Swords n Magic and Stuff'\n                url=\"https://implodingduck.github.io/swords-n-magic-and-maps/tiles/{z}/{x}/{y}.png\"\n                minZoom={0}\n                maxNativeZoom={3}\n                noWrap={true}\n                tms={true}\n                />\n\n                \n                <CreateLeafletControl position=\"topright\">\n                    <MapFilter></MapFilter>\n                </CreateLeafletControl>\n                <CreateLeafletControl position=\"topright\">\n                    <MapFuctions></MapFuctions>\n                </CreateLeafletControl>\n                \n                <GeoJSON data={geojsondata} onEachFeature={handleEachFeature} pointToLayer={handlePointToLayer}>\n                    \n                </GeoJSON>\n                \n            </MapContainer>\n        </div>\n    );\n};\n\nexport default Map\n\n","import logo from './logo.svg';\nimport './App.css';\nimport Map from './Map'\nimport 'leaflet/dist/leaflet.css';\n\nfunction App() {\n  return (\n    <Map></Map>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}